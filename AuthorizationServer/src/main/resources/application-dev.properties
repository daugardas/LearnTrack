spring.application.name=AuthorizationServer
server.port=9000
logging.level.root=INFO
logging.level.org.springframework.security=trace
logging.level.org.springframework.boot.autoconfigure=WARN

spring.security.user.name=user
spring.security.user.password=password

spring.security.oauth2.authorizationserver.client.learntrack.registration.client-id=learntrack
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-name={noop}secret
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-secret=secret
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.learntrack.registration.authorization-grant-types=authorization_code,refresh_token,client_credentials
spring.security.oauth2.authorizationserver.client.learntrack.registration.redirect-uris=https://app.localhost/login/oauth2/code/learntrack
# spring.security.oauth2.authorizationserver.client.learntrack.registration.post-logout-redirect-uris[]=http://localhost:9000/auth/
spring.security.oauth2.authorizationserver.client.learntrack.registration.scopes=openid,profile,read,write

# spring.security.oauth2.authorizationserver.client.learntrack.require-authorization-consent=true

# points to itself as the issuer
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000/

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.url=jdbc:postgresql://auth-server-db:5432/auth-db
spring.datasource.username=myuser
spring.datasource.password=secret
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
