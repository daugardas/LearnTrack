spring.application.name=${APP_NAME:AuthorizationServer}
server.port=${APP_PORT:9000}
# logging.level.root=INFO
logging.level.org.springframework.security=${LOGGING_LEVEL:INFO}
# spring.security.user.name=user
# spring.security.user.password=password
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-id=${CLIENT_ID:learntrack}
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-name=${CLIENT_NAME:secret}
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-secret=${CLIENT_SECRET:secret}
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-authentication-methods=${CLIENT_AUTHENTICATION_METHODS:client_secret_basic}
spring.security.oauth2.authorizationserver.client.learntrack.registration.authorization-grant-types=${AUTHORIZATION_GRANT_TYPES:authorization_code,refresh_token,client_credentials}
spring.security.oauth2.authorizationserver.client.learntrack.registration.redirect-uris=${REDIRECT_URIS:https://learntrack-client-server-kl7xk.ondigitalocean.app/login/oauth2/code/learntrack}
# spring.security.oauth2.authorizationserver.client.learntrack.registration.redirect-uris=https://oauth.pstmn.io/v1/callback
spring.security.oauth2.authorizationserver.client.learntrack.registration.scopes=${SCOPES:openid,profile,read,write}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://localhost:9000}


spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=${MAXIMUM_POOL_SIZE:5}
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:32769/auth-db}
spring.datasource.username=${DATABASE_USERNAME:myuser}
spring.datasource.password=${DATABASE_PASSWORD:secret}
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update