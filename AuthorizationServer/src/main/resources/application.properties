spring.application.name=AuthorizationServer
server.port=9000
logging.level.root=INFO
logging.level.org.springframework.security=trace
spring.security.user.name=user
spring.security.user.password=password
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-id=learntrack
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-name={noop}secret
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-secret=secret
spring.security.oauth2.authorizationserver.client.learntrack.registration.client-authentication-methods[]=client_secret_basic
spring.security.oauth2.authorizationserver.client.learntrack.registration.authorization-grant-types[]=authorization_code,refresh_token,client_credentials
spring.security.oauth2.authorizationserver.client.learntrack.registration.redirect-uris[]=https://oauth.pstmn.io/v1/callback
spring.security.oauth2.authorizationserver.client.learntrack.registration.post-logout-redirect-uris[]=http://127.0.0.1:8080/
spring.security.oauth2.authorizationserver.client.learntrack.registration.scopes[]=openid,profile,read,write
spring.security.oauth2.authorizationserver.client.learntrack.token.access-token.time-to-live=3600s
spring.security.oauth2.authorizationserver.client.learntrack.token.refresh-token.time-to-live=86400s

spring.security.oauth2.authorizationserver.client.learntrack.require-authorization-consent=true
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000

spring.docker.compose.file=./compose.yaml
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.url=jdbc:postgresql://localhost:32769/auth-db
spring.datasource.username=myuser
spring.datasource.password=secret
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

resource-server.url=http://localhost:8080

spring.sql.init.mode=always